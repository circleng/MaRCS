{
    "contents" : "library(ggplot2)\n\n#1 number worker testse\ntest1 <- function(){\n  result.df1 <<- onevar.df(\"test1.csv\")\n  xplot(result.df1)\n}\n\n#2 worker probability test (mv)(normal)\ntest2 <- function(){\n  result.df2 <<- onevar.df(\"test2.csv\")\n  xplot(result.df2)\n}\n\ntests <- function(){\n  result.dfs <<- onevar.df(\"tests.csv\")\n  result.dfs2 <<- onevar.df(\"tests2.csv\")\n  result.dfs3 <<- onevar.df(\"tests3.csv\")\n  \n  plot <- nlineplot(list(result.dfs, result.dfs2, result.dfs3),list(\"MV\",\"MV Soft\",\"MV Soft + Cut\"),\"Data.Fusion\")\n  plot + ggtitle(\"Performance between Majority Voting\")\n}\n\ntesta <- function(){\n  result.dfa <<- onevar.df(\"testa.csv\")\n  result.dfa2 <<- onevar.df(\"testa2.csv\")\n  result.dfa3 <<- onevar.df(\"testa3.csv\")\n  \n  plot <- nlineplot(list(result.dfa, result.dfa3),list(\"MV\",\"MV Soft + Cut\"),\"Data.Fusion\")\n  plot + ggtitle(\"Performance between Majority Voting\")\n}\n\ntest2.1 <- function(){\n  result.df2.1 <<- onevar.df(\"test2.1.csv\")\n  xplot(result.df2.1)\n}\n\n#3 worker probability test (em)(normal)\ntest3 <- function(){\n  result.df3 <<- onevar.df(\"test3.csv\")\n  result.df3 <<- enlarge(result.df3)\n  \n  xplot(result.df3)\n}\n\nenlarge <- function(df){\n  row <- nrow(df)\n  for(i in 1:(row - 1)){\n    start <- df[i,1]\n    end <- df[i+1,1] \n    \n    size <- (end-start)\n    value <- seq(df[i,2], df[i+1,2], length.out = size + 1)\n    \n    for(ii in 2:size){\n      df <- rbind(df, c(start + ii - 1,value[ii]))\n    }\n  }\n  df <- df[with(df, order(df[,1])), ]\n  df\n}\n\n#4 worker probability test (mv)(random)\ntest4 <- function(){\n  result.df4 <<- onevar.df(\"test4.csv\")\n  xplot(result.df4)\n}\n\n#5 worker probability test (mv)(soft)(normal)\ntest5 <- function(){\n  #result.df5 <<- twovar.df(\"test5.csv\")\n  result.df5 <<- twovar2.df(\"test5.csv\",\"test5plus.csv\")\n  temp <- result.df5\n  result.df5[temp$cut.workers.per.round == 0,\"cut.workers.per.round\"] <<- \"0%\"\n  result.df5[temp$cut.workers.per.round > 0 \n                                   & temp$cut.workers.per.round <= 25,\"cut.workers.per.round\"] <<- \"1-25%\"\n  result.df5[temp$cut.workers.per.round > 25 \n             & temp$cut.workers.per.round <= 50,\"cut.workers.per.round\"] <<- \"25-50%\"\n  \n  result.df5 <<- aggregate(correctness ~ .,data = result.df5, mean)\n  result.df5$cut.workers.per.round <- factor(result.df5$cut.workers.per.round)\n  \n  plot <- x2plot(result.df5)\n  plot + ggtitle(\"Performance of Majority Voting with Soft Penalty\")\n}\n\ntest5soft <- function(){\n  result.df5soft <<- onevar.df(\"test5soft.csv\")\n  \n  result.df5soft <<- aggregate(correctness ~ .,data = result.df5soft, mean)\n  \n  plot <- xplot(result.df5soft)\n  plot + ggtitle(\"Performance of Majority Voting with Soft Penalty\")\n}\n\ntest5hard <- function(){\n  result.df5hard <<- onevar.df(\"test5hard.csv\")\n\n  result.df5hard <<- aggregate(correctness ~ .,data = result.df5hard, mean)\n  \n  plot <- xplot(result.df5hard)\n  plot + ggtitle(\"Performance of Majority Voting with Hard Penalty\")\n}\n\ntest6soft <- function(){\n  result.df6soft <<- onevar.df(\"test6soft.csv\")\n  \n  result.df6soft <<- aggregate(correctness ~ .,data = result.df6soft, mean)\n  \n  plot <- xplot(result.df6soft)\n  plot + ggtitle(\"Performance of Majority Voting with Soft Penalty\")\n}\n\ntest6hard <- function(){\n  result.df6hard <<- onevar.df(\"test6hard.csv\")\n  \n  result.df6hard <<- aggregate(correctness ~ .,data = result.df6hard, mean)\n  \n  plot <- xplot(result.df6hard)\n  plot + ggtitle(\"Performance of Majority Voting with Soft Penalty\")\n}\n\n\n\n#6 worker probability test (em)(soft)(normal)\ntest6 <- function(){\n  result.df6 <<- twovar.df(\"test6.csv\")\n  #result.df6 <<- twovar2.df(\"test6.csv\",\"test6plus.csv\")\n  temp <- result.df6\n\n  result.df6[temp$cut.workers.per.round == 0,\"cut.workers.per.round\"] <<- \"0%\"\n  result.df6[temp$cut.workers.per.round > 0 \n             & temp$cut.workers.per.round <= 25,\"cut.workers.per.round\"] <<- \"1-25%\"\n  result.df6[temp$cut.workers.per.round > 25 \n             & temp$cut.workers.per.round <= 50,\"cut.workers.per.round\"] <<- \"25-50%\"\n  \n  result.df6 <<- aggregate(correctness ~ .,data = result.df6, mean)\n  result.df6$cut.workers.per.round <- factor(result.df6$cut.workers.per.round)\n  \n  plot <- x2plot(result.df6)\n  plot + ggtitle(\"Performance of EM Algorithm with Soft Penalty\")\n}\n\n#7 mv adversaries type 3\ntest7 <- function(){\n  result.df7 <<- twovar.df(\"test7.csv\")\n  result.df7$workers.probability <- factor(result.df7$workers.probability)\n  \n  x2plot(result.df7) + ggtitle(\"Performance of Majority Voting with Adversaries Type 3\")\n}\n\n#8 mv adversaries type 2\ntest8 <- function(){\n  result.df8 <<- twovar.df(\"test8.csv\")\n  result.df8$workers.probability <- factor(result.df8$workers.probability)\n  \n  x2plot(result.df8) + ggtitle(\"Performance of Majority Voting with Adversaries Type 2\")\n}\n\n#9 mv adversaries type 1 normal\ntest9 <- function(){\n  result.df9 <<- twovar.df(\"test9.csv\")\n  result.df9$workers.probability <- factor(result.df9$workers.probability)\n\n  x2plot(result.df9) + ggtitle(\"Performance of Majority Voting with Adversaries Type 1\")\n}\n\n#9 mv adversaries type 1 random\ntest9.1 <- function(){\n  result.df9.1 <<- twovar.df(\"test9.1.csv\")\n  result.df9.1$workers.probability <- factor(result.df9.1$workers.probability)\n  \n  x2plot(result.df9.1) + ggtitle(\"Performance of Majority Voting with Adversaries Type 1\")\n}\n\n#10 em adversaries type 3\ntest10 <- function(){\n  result.df10 <<- twovar.df(\"test10.csv\")\n  result.df10$workers.probability <- factor(result.df10$workers.probability)\n  \n  x2plot(result.df10)\n}\n\n#11 em adversaries type 2\ntest11 <- function(){\n  result.df11 <<- twovar.df(\"test11.csv\")\n  result.df11$workers.probability <- factor(result.df11$workers.probability)\n  \n  x2plot(result.df11)\n}\n\n#12 em adversaries type 1\ntest12 <- function(){\n  result.df12 <<- twovar.df(\"test12.csv\")\n  result.df12$workers.probability <- factor(result.df12$workers.probability)\n  \n  x2plot(result.df12)\n}\n\n#13 mv adversaries type 3 soft\ntest13 <- function(){\n  result.df13 <<- threevar.df(\"test13.csv\")\n  \n  temp <- result.df13\n  result.df13[temp$cut.workers.per.round == 0 & temp$workers.probability == 50\n              ,\"cut.workers.per.round\"] <<- \"0%, worker-prob 50%\"\n  result.df13[temp$cut.workers.per.round == 0 & temp$workers.probability == 100\n              ,\"cut.workers.per.round\"] <<- \"0%, worker-prob 100%\"\n  result.df13[temp$cut.workers.per.round == 25 & temp$workers.probability == 50\n              ,\"cut.workers.per.round\"] <<- \"25%, worker-prob 50%\"\n  result.df13[temp$cut.workers.per.round == 25 & temp$workers.probability == 100\n              ,\"cut.workers.per.round\"] <<- \"25%, worker-prob 100%\"\n  result.df13[temp$cut.workers.per.round == 50 & temp$workers.probability == 50\n              ,\"cut.workers.per.round\"] <<- \"50%, worker-prob 50%\"\n  result.df13[temp$cut.workers.per.round == 50 & temp$workers.probability == 100\n              ,\"cut.workers.per.round\"] <<- \"50%, worker-prob 100%\"\n  \n  result.df13 <<- result.df13[,c(3,2,4)]\n  result.df13 <<- aggregate(correctness ~ .,data = result.df13, mean)\n  \n  result.df13$cut.workers.per.round <- factor(result.df13$cut.workers.per.round)\n  \n  plot <- x2plot(result.df13) + ggtitle(\"Performance of Majority Voting with Soft Penalty and Adversaries Type 3\")\n  \n  plot + scale_colour_manual(values = c(\"#f9007c\", \"#ffa2d0\", \"#0ca3ff\", \"#86d1ff\", \"#00d00e\", \"#82ff8a\")) \n}\n\n#14 mv adversaries type 2 soft\ntest14 <- function(){\n  result.df14 <<- threevar.df(\"test14.csv\")\n  \n  temp <- result.df14\n  result.df14[temp$cut.workers.per.round == 0 & temp$workers.probability == 50\n              ,\"cut.workers.per.round\"] <<- \"0%, worker-prob 50\"\n  result.df14[temp$cut.workers.per.round == 0 & temp$workers.probability == 100\n              ,\"cut.workers.per.round\"] <<- \"0%, worker-prob 100\"\n  result.df14[temp$cut.workers.per.round == 25 & temp$workers.probability == 50\n              ,\"cut.workers.per.round\"] <<- \"25%, worker-prob 50\"\n  result.df14[temp$cut.workers.per.round == 25 & temp$workers.probability == 100\n              ,\"cut.workers.per.round\"] <<- \"25%, worker-prob 100\"\n  result.df14[temp$cut.workers.per.round == 50 & temp$workers.probability == 50\n              ,\"cut.workers.per.round\"] <<- \"50%, worker-prob 50\"\n  result.df14[temp$cut.workers.per.round == 50 & temp$workers.probability == 100\n              ,\"cut.workers.per.round\"] <<- \"50%, worker-prob 100\"\n  \n  result.df14 <<- result.df14[,c(3,2,4)]\n  result.df14 <<- aggregate(correctness ~ .,data = result.df14, mean)\n  \n  result.df14$cut.workers.per.round <- factor(result.df14$cut.workers.per.round)\n  \n  plot <- x2plot(result.df14) + ggtitle(\"Performance of Majority Voting with Soft Penalty and Adversaries Type 2\")\n  \n  \n  plot + scale_colour_manual(values = c(\"#f9007c\", \"#ffa2d0\", \"#0ca3ff\", \"#86d1ff\", \"#00d00e\", \"#82ff8a\")) \n}\n\n#15 mv adversaries type 2 soft\ntest15 <- function(){\n  result.df15 <<- threevar.df(\"test15.csv\")\n  \n  temp <- result.df15\n  result.df15[temp$cut.workers.per.round == 0 & temp$workers.probability == 50\n              ,\"cut.workers.per.round\"] <<- \"0%, worker-prob 50\"\n  result.df15[temp$cut.workers.per.round == 0 & temp$workers.probability == 100\n              ,\"cut.workers.per.round\"] <<- \"0%, worker-prob 100\"\n  result.df15[temp$cut.workers.per.round == 25 & temp$workers.probability == 50\n              ,\"cut.workers.per.round\"] <<- \"25%, worker-prob 50\"\n  result.df15[temp$cut.workers.per.round == 25 & temp$workers.probability == 100\n              ,\"cut.workers.per.round\"] <<- \"25%, worker-prob 100\"\n  result.df15[temp$cut.workers.per.round == 50 & temp$workers.probability == 50\n              ,\"cut.workers.per.round\"] <<- \"50%, worker-prob 50\"\n  result.df15[temp$cut.workers.per.round == 50 & temp$workers.probability == 100\n              ,\"cut.workers.per.round\"] <<- \"50%, worker-prob 100\"\n  \n  result.df15 <<- result.df15[,c(3,2,4)]\n  result.df15 <<- aggregate(correctness ~ .,data = result.df15, mean)\n  \n  result.df15$cut.workers.per.round <- factor(result.df15$cut.workers.per.round)\n  \n  plot <- x2plot(result.df15) + ggtitle(\"Performance of Majority Voting with Soft Penalty and Adversaries Type 1\")\n  \n  plot + scale_colour_manual(values = c(\"#f9007c\", \"#ffa2d0\", \"#0ca3ff\", \"#86d1ff\", \"#00d00e\", \"#82ff8a\")) \n}\n\n#16 em adversaries type 3 soft\ntest16 <- function(){\n  result.df16 <<- threevar.df(\"test16.csv\")\n  \n  temp <- result.df16\n  result.df16[temp$cut.workers.per.round == 0 & temp$workers.probability == 50\n              ,\"cut.workers.per.round\"] <<- \"0%, worker-prob 50\"\n  result.df16[temp$cut.workers.per.round == 0 & temp$workers.probability == 100\n              ,\"cut.workers.per.round\"] <<- \"0%, worker-prob 100\"\n  result.df16[temp$cut.workers.per.round == 25 & temp$workers.probability == 50\n              ,\"cut.workers.per.round\"] <<- \"25%, worker-prob 50\"\n  result.df16[temp$cut.workers.per.round == 25 & temp$workers.probability == 100\n              ,\"cut.workers.per.round\"] <<- \"25%, worker-prob 100\"\n  result.df16[temp$cut.workers.per.round == 50 & temp$workers.probability == 50\n              ,\"cut.workers.per.round\"] <<- \"50%, worker-prob 50\"\n  result.df16[temp$cut.workers.per.round == 50 & temp$workers.probability == 100\n              ,\"cut.workers.per.round\"] <<- \"50%, worker-prob 100\"\n  \n  result.df16 <<- result.df16[,c(3,2,4)]\n  result.df16 <<- aggregate(correctness ~ .,data = result.df16, mean)\n  \n  result.df16$cut.workers.per.round <- factor(result.df16$cut.workers.per.round)\n  \n  plot <- x2plot(result.df16) + ggtitle(\"Performance of EM Algorithm with Soft Penalty and Adversaries Type 3\")\n  \n  plot + scale_colour_manual(values = c(\"#f9007c\", \"#ffa2d0\", \"#0ca3ff\", \"#86d1ff\", \"#00d00e\", \"#82ff8a\")) \n}\n\n#17 em adversaries type 3 soft\ntest17 <- function(){\n  result.df17 <<- threevar.df(\"test17.csv\")\n  \n  temp <- result.df17\n  result.df17[temp$cut.workers.per.round == 0 & temp$workers.probability == 50\n              ,\"cut.workers.per.round\"] <<- \"0%, worker-prob 50\"\n  result.df17[temp$cut.workers.per.round == 0 & temp$workers.probability == 100\n              ,\"cut.workers.per.round\"] <<- \"0%, worker-prob 100\"\n  result.df17[temp$cut.workers.per.round == 25 & temp$workers.probability == 50\n              ,\"cut.workers.per.round\"] <<- \"25%, worker-prob 50\"\n  result.df17[temp$cut.workers.per.round == 25 & temp$workers.probability == 100\n              ,\"cut.workers.per.round\"] <<- \"25%, worker-prob 100\"\n  result.df17[temp$cut.workers.per.round == 50 & temp$workers.probability == 50\n              ,\"cut.workers.per.round\"] <<- \"50%, worker-prob 50\"\n  result.df17[temp$cut.workers.per.round == 50 & temp$workers.probability == 100\n              ,\"cut.workers.per.round\"] <<- \"50%, worker-prob 100\"\n  \n  result.df17 <<- result.df17[,c(3,2,4)]\n  result.df17 <<- aggregate(correctness ~ .,data = result.df17, mean)\n  \n  result.df17$cut.workers.per.round <- factor(result.df17$cut.workers.per.round)\n  \n  plot <- x2plot(result.df17)+ ggtitle(\"Performance of EM Algorithm with Soft Penalty and Adversaries Type 2\")\n  \n  plot + scale_colour_manual(values = c(\"#f9007c\", \"#ffa2d0\", \"#0ca3ff\", \"#86d1ff\", \"#00d00e\", \"#82ff8a\")) \n}\n\n#18 em adversaries type 3 soft\ntest18 <- function(){\n  result.df18 <<- threevar.df(\"test18.csv\")\n  \n  temp <- result.df18\n  result.df18[temp$cut.workers.per.round == 0 & temp$workers.probability == 50\n              ,\"cut.workers.per.round\"] <<- \"0%, worker-prob 50\"\n  result.df18[temp$cut.workers.per.round == 0 & temp$workers.probability == 100\n              ,\"cut.workers.per.round\"] <<- \"0%, worker-prob 100\"\n  result.df18[temp$cut.workers.per.round == 25 & temp$workers.probability == 50\n              ,\"cut.workers.per.round\"] <<- \"25%, worker-prob 50\"\n  result.df18[temp$cut.workers.per.round == 25 & temp$workers.probability == 100\n              ,\"cut.workers.per.round\"] <<- \"25%, worker-prob 100\"\n  result.df18[temp$cut.workers.per.round == 50 & temp$workers.probability == 50\n              ,\"cut.workers.per.round\"] <<- \"50%, worker-prob 50\"\n  result.df18[temp$cut.workers.per.round == 50 & temp$workers.probability == 100\n              ,\"cut.workers.per.round\"] <<- \"50%, worker-prob 100\"\n  \n  result.df18 <<- result.df18[,c(3,2,4)]\n  result.df18 <<- aggregate(correctness ~ .,data = result.df18, mean)\n  \n  result.df18$cut.workers.per.round <- factor(result.df18$cut.workers.per.round)\n  \n  plot <- x2plot(result.df18)+ ggtitle(\"Performance of EM Algorithm with Soft Penalty and Adversaries Type 1\n                                       \")\n  \n  \n  plot + scale_colour_manual(values = c(\"#f9007c\", \"#ffa2d0\", \"#0ca3ff\", \"#86d1ff\", \"#00d00e\", \"#82ff8a\")) \n}\n\n#s1 MV vs EM normal (no penalty)\ns1 <- function(){\n  plot <- nlineplot(list(result.df2, result.df3),list(\"MV\",\"EM\"),\"Data.Fusion\")\n  plot + ggtitle(\"Performance between Majority Voting and EM Algorithm with Normal Workers\")\n}\n\ns1diff <- function(){\n  result <- rep(0,100)\n  result[30:70] <- result.df3[,2] - result.df2[30:70,2]\n  qplot(x = 1:100, y = result, geom = \"blank\") + geom_point(colour = \"grey\") + \n    geom_smooth(se = FALSE, span = 0.2, size = 1.2, colour = \"#061954\") + \n   theme_bw() + xlab(\"Workers Probability\") + ylab(\"Different Correctness\") +\n    ggtitle(\"Different Correctness of EM Algorithm and Majority Voting\")\n}\n\n#s2 MV vs EM type 3 (no penalty)\ns2 <- function(){\n  plot <- nlineplot(list(result.df7[result.df7$workers.probability == 50,],\n                 result.df7[result.df7$workers.probability == 100,],\n                 result.df10[result.df10$workers.probability == 50,],\n                 result.df10[result.df10$workers.probability == 100,]),\n                 list(\"MV worker-prob 50%\",\"MV worker-prob 100%\",\"EM worker-prob 50%\",\"EM worker-prob 100%\"),\"Data.Fusion\")\n  plot + scale_colour_manual(values = c(\"#f9007c\", \"#ffa2d0\", \"#0ca3ff\", \"#86d1ff\")) +\n     ggtitle(\"Performance between Majority Voting and EM Algorithm with Adversaries Type 3\")\n}\n\ns2diff <- function(){\n  result <- rep(0,100)\n  result <- result.df7[102:202,3] - result.df10[12:22,3]\n  qplot(x = 1:100, y = result, geom = \"blank\") + geom_point(colour = \"grey\") + \n    geom_smooth(se = FALSE, span = 0.2, size = 1.2, colour = \"#061954\") + \n    theme_bw() + xlab(\"Workers Probability\") + ylab(\"Different Correctness\") +\n    ggtitle(\"Different Correctness of EM Algorithm and Majority Voting\")\n}\n\n#s3 MV vs EM type 2 (no penalty)\ns3 <- function(){\n  plot <- nlineplot(list(result.df8[result.df8$workers.probability == 50,],\n                 result.df8[result.df8$workers.probability == 100,],\n                 result.df11[result.df11$workers.probability == 50,],\n                 result.df11[result.df11$workers.probability == 100,]),\n            list(\"MV worker-prob 50\",\"MV worker-prob 100\",\"EM worker-prob 50\",\"EM worker-prob 100\"),\"Data.Fusion\")\n  plot + scale_colour_manual(values = c(\"#f9007c\", \"#ffa2d0\", \"#0ca3ff\", \"#86d1ff\")) +\n    ggtitle(\"Performance between Majority Voting and EM Algorithm with Adversaries Type 2\") \n}\n\n#s4 MV vs EM type 1 (no penalty)\ns4 <- function(){\n  plot <- nlineplot(list(result.df9.1[result.df9.1$workers.probability == 50,],\n                 result.df9.1[result.df9.1$workers.probability == 100,],\n                 result.df12[result.df12$workers.probability == 50,],\n                 result.df12[result.df12$workers.probability == 100,]),\n                 list(\"MV worker-prob 50\",\"MV worker-prob 100\",\"EM worker-prob 50\",\"EM worker-prob 100\"),\"Data.Fusion\")\n  \n  \n  plot + scale_colour_manual(values = c(\"#f9007c\", \"#ffa2d0\", \"#0ca3ff\", \"#86d1ff\"))  +\n    ggtitle(\"Performance between Majority Voting and EM Algorithm with Adversaries Type 1\")  \n}\n\n#ss1 MV vs vs MV Soft vs MV Hard normal (no penalty)\nss1 <- function(){\n  plot <- nlineplot(list(result.df2, result.df5hard, result.df5soft),list(\"MV\",\"MV Hard\",\"MV Soft\"),\"Data.Fusion\")\n  plot + ggtitle(\"Performance between Majority Voting and Hard Soft with Normal Workers\")\n}\n\nss1diff <- function(){\n  df <- data.frame()\n  \n  result <- rep(0,100)\n  result <- result.df2[,2] - result.df5soft[,2]\n  df <- rbind(df,setNames(data.frame(0:100, result, rep(\"MV Soft\",101)),names(df)) )\n  \n  result <- rep(0,100)\n  result <- result.df2[,2] - result.df5hard[,2]\n  df <- rbind(df,setNames(data.frame(0:100, result, rep(\"MV Hard\",101)),names(df)) )\n  \n  result <- rep(0,100)\n  result <- result.df2[,2] - result.df6soft[,2]\n  df <- rbind(df,setNames(data.frame(0:100, result, rep(\"EM Soft\",101)),names(df)) )\n  \n  result <- rep(0,100)\n  result <- result.df2[,2] - result.df6hard[,2]\n  df <- rbind(df,setNames(data.frame(0:100, result, rep(\"EM Hard\",101)),names(df)) )\n  \n  colnames(df) <- c(\"worker.prob\",\"correctness\",\"set\")\n  \n  \n  ggplot(data = df, aes(x = df[,1], y = df[,2], colour = set)) + geom_point(size = 0.3) + \n    stat_smooth(se = FALSE, span = 0.3, size = 1.2, aes(fill = set)) + \n    theme_bw() + xlab(\"Workers Probability\") + ylab(\"Different Correctness\") +\n    ggtitle(\"Different Correctness of Majority Voting with Reputation Algorithm\")\n}\n\nonevar.df <- function(file){\n  df <- read.csv(paste(\"result\",file,sep = \"/\"), skip = 6)\n  df <- df[, c(2,length(df))]\n  colnames(df)[2] <- \"correctness\" \n  \n  df <- aggregate(correctness ~ .,data = df, mean)\n  df \n}\n\ntwovar.df <- function(file){\n  df <- read.csv(paste(\"result\",file,sep = \"/\"), skip = 6)\n  df <- df[, c(2:3,length(df))]\n  colnames(df)[3] <- \"correctness\" \n  df <- aggregate(correctness ~ .,data = df, mean)\n  \n  df \n}\n\ntwovar2.df <- function(file,file2){\n  df <- read.csv(paste(\"test\",file,sep = \"/\"), skip = 6)\n  df <- rbind(df,  df <- read.csv(paste(\"test\",file2,sep = \"/\"), skip = 6))\n  df <- df[, c(2:3,length(df))]\n  colnames(df)[3] <- \"correctness\" \n  df <- aggregate(correctness ~ .,data = df, mean)\n  \n  df \n}\n\nthreevar.df <- function(file){\n  df <- read.csv(paste(\"result\",file,sep = \"/\"), skip = 6)\n  df <- df[, c(2:4,length(df))]\n  colnames(df)[4] <- \"correctness\" \n  df <- aggregate(correctness ~ .,data = df, mean)\n  \n  df \n}\n\nxplot <- function(df){\n  ggplot(data = df, aes_string(x = colnames(df)[1], y = \"correctness\")) +\n    geom_line(size=1.2) + ggtitle(\"Average Correctness Plot\") + ylim(0,100)\n}\n\nx2plot <- function(df){\n  ggplot(data = df, aes_string(x = colnames(df)[1], y = \"correctness\",\n                                group = colnames(df)[2], colour= colnames(df)[2])) + \n    geom_line(size=1.2) + ylim(0,100)\n}\n\nnlineplot <- function(list.df,list.name,legend.name = \"set\", title = \"Plot\"){\n  df <- do.call(rbind, list.df)\n  \n  temp <- c()\n  for(i in 1:length(list.df)){\n    temp <- c(temp, rep(list.name[[i]], nrow(list.df[[i]])))\n  }\n  \n  df[,legend.name] <- temp\n\n  ggplot(data = df, aes_string(x = colnames(df)[1], y = \"correctness\",group = legend.name, color = legend.name)) + \n    geom_line(size=1.2) +\n    ggtitle(title) + ylim(0,100)\n}\n\ndiffchange <- function(df){\n  diff <- aggregate(correctness ~ cut.workers.per.round ,data = df, mean)\n  diff$change <- round(diff$correctness - diff$correctness[1], 5)\n  \n  View(diff)\n}\n\ndiffchange1 <- function(df){\n  diff <- aggregate(correctness ~ cut.workers.per.round ,data = df, mean)\n  diff <- diff[c(1,3,5),]\n  diff$change <- round(diff$correctness - diff$correctness[1], 5)\n  \n  View(diff)\n}\n\ndiffchange2 <- function(df){\n  diff <- aggregate(correctness ~ cut.workers.per.round ,data = df, mean)\n  diff <- diff[c(2,4,6),]\n  diff$change <- round(diff$correctness - diff$correctness[1], 5)\n  \n  View(diff)\n}\n\ncutcheck <- function(){\n  cut <- onevar.df(\"newcut0.csv\")\n  ggplot(cut, aes(x = cut[,1], y = cut[,2])) + geom_smooth(se = FALSE, colour=\"black\") + \n    theme_bw() + xlab(\"Percent of cut workers\") + ylab(\"Correctness\") +\n    geom_abline(intercept = cut[1,2], slope = 0, colour = \"green\", size = 1.2) +\n    scale_x_discrete(breaks = 1:20) + ggtitle(\"Correctness by Percent of Cut Workers\")\n}\n\ncut1check <- function(){\n  cut <- onevar.df(\"newcut1.csv\")\n  ggplot(cut, aes(x = cut[,1], y = cut[,2])) + geom_smooth(se = FALSE, colour=\"black\") + \n    theme_bw() + xlab(\"Percent of cut workers\") + ylab(\"Correctness\") +\n    geom_abline(intercept = cut[1,2], slope = 0, colour = \"green\", size = 1.2) +\n    scale_x_discrete(breaks = 1:20) + ggtitle(\"Correctness by Percent of Cut Workers\")\n}",
    "created" : 1456994890776.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2024604082",
    "id" : "24898841",
    "lastKnownWriteTime" : 1456998411,
    "path" : "C:/Users/Ongz/Desktop/Project/MaRCS/Program/result.R",
    "project_path" : "result.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : true,
    "type" : "r_source"
}